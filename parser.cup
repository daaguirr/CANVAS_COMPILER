package cup.example;

import java_cup.runtime.*;
import cup.example.Lexer;
import java.io.IOException;
import java.io.File;
import java.io.FileInputStream;
import Model.*;
  
parser code {: 
	protected Lexer lexer;
	Pluma pluma = new Pluma(); 
	ITablero tablero = null;
:}

init with {: 
	ComplexSymbolFactory f = new ComplexSymbolFactory(); 
	symbolFactory = f;
	File file = new File("input.txt");  
	FileInputStream fis = null;
	try {
		fis = new FileInputStream(file);
	} catch (IOException e) {
		e.printStackTrace();
	}
	lexer = new Lexer(f,fis); 
:};

scan with {: return lexer.next_token(); :};

terminal IF, WHILE , THEN , ELSE ,BAJARP, SUBIRP , COLORP, DIRP , DO;
terminal AVAZ , TABCOL , BORDE , PLUMADIR , PLUMACOL, PLUMAUP, PLUMADOWN ,AND, OR;
terminal NOT, SEMI, BRACKETL, BRACKETR;
		
terminal Color c;
terminal Direction d;
terminal Integer num;

non terminal op;
non terminal IExpression expr;

precedence left SEMI;
precedence left AND;
precedence left OR;

start with op;

op 	::= 	BAJARP {: RESULT = new BajarPluma(); :}
			| SUBIRP {: RESULT = new SubirPluma();:}
			| COLORP c:c1 {:RESULT = new CambiarColor();:} 
			| DIRP d:d1 {: RESULT = new CambiarDireccion();:}
			| AVAZ num:num1 {:RESULT =  new Azanzar(num);:}
			| IF expr:e1 THEN BRACKETL op:o1 BRACKETR {:;:}
			| IF expr:e1 THEN BRACKETL op:o1 BRACKETR ELSE BRACKETL op:o2 BRACKETR {:;:}
			| WHILE expr:e1 DO BRACKETL op:o1 BRACKETR {:  :}
			| op:o1 SEMI op:o2 {:;:}
			;

expr ::= 	TABCOL c:c1 {:RESULT = new TableroCol(c1);:}
			| BORDE	{:RESULT = new Borde();:}
			| PLUMADIR d:d1 {:RESULT = new PlumaDir(d1);:}
			| PLUMACOL c:c1 {:RESULT = new PlumaCol(d2);:}
			| PLUMAUP {:RESULT = new PlumaUp();:}
			| PLUMADOWN {:RESULT = new PlumaDown();:}
			| expr:e1 AND expr:e2 {:RESULT = new And(e1,e2);:}
			| expr:e1 OR expr:e2 {:RESULT = new Or(e1,e2);:}
			| NOT expr:e1 {:RESULT = Not(e1);:}
			;

            


